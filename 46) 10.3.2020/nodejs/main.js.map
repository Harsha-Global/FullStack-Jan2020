{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Services/dashboard.guard.ts","./src/app/Services/users.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/login-component/login.component.ts","./src/app/login-component/login.component.html","./src/app/registration-component/registration.component.ts","./src/app/registration-component/registration.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { UsersService } from './users.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class DashboardGuardService\r\n{\r\n  constructor(private usersService: UsersService)\r\n  {\r\n  }\r\n\r\n  canActivate(): boolean\r\n  {\r\n    if (this.usersService.isLoggedIn == true)\r\n    {\r\n      return true; //permission given for /dashboard\r\n    }\r\n    else\r\n    {\r\n      return false; //permission denied for /dashboard\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Login } from '../models/login';\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UsersService\r\n{\r\n  isLoggedIn: boolean = false;\r\n\r\n  constructor(private httpClient: HttpClient )\r\n  {\r\n  }\r\n\r\n  getUsersByUserNameAndPassword(uname: string, pwd: string)\r\n  {\r\n    return this.httpClient.post<Login[]>(\"/login\",  { username: uname, password: pwd });\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login-component/login.component';\nimport { RegistrationComponent } from './registration-component/registration.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DashboardGuardService } from './Services/dashboard.guard';\n\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegistrationComponent },\n\n  { path: \"dashboard\", component: DashboardComponent, canActivate: [ DashboardGuardService ] },\n\n  { path: \"\", redirectTo: \"/login\", pathMatch: \"full\" },\n  { path: \"**\", component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { UsersService } from './Services/users.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent\n{\n  constructor(public usersService: UsersService, private router: Router)\n  {\n  }\n\n  onLogoutClick()\n  {\n    this.usersService.isLoggedIn = false;\n    this.router.navigate( [ \"/login\" ] );\n  }\n}\n\n\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">Company</a>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n\n      <li class=\"nav-item active\" *ngIf=\"usersService.isLoggedIn == false\">\n        <a class=\"nav-link\" [routerLink]=\" [ '/login' ]\">\n          Login\n        </a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"usersService.isLoggedIn == false\">\n        <a class=\"nav-link\" [routerLink]=\" [ '/register' ]\">\n          Register\n        </a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"usersService.isLoggedIn == true\">\n        <a class=\"nav-link\" [routerLink]=\" [ '/dashboard' ]\">\n          Dashboard\n        </a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"usersService.isLoggedIn == true\">\n        <a class=\"nav-link\" href=\"#\" onclick=\"return false\" (click)=\"onLogoutClick()\">\n          Logout\n        </a>\n      </li>\n\n      \n    </ul>\n  </div>\n</nav>\n\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n\n    <div class=\"col-md-3 border-right\">\n      <div class=\"list-group\">\n        <a href=\"#\" class=\"list-group-item list-group-item-action active\">\n          Cras justo odio\n        </a>\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Dapibus ac facilisis in</a>\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Morbi leo risus</a>\n        <a href=\"#\" class=\"list-group-item list-group-item-action\">Porta ac consectetur ac</a>\n        <a href=\"#\" class=\"list-group-item list-group-item-action disabled\" tabindex=\"-1\" aria-disabled=\"true\">Vestibulum at eros</a>\n      </div>\n    </div>\n  \n    <div class=\"col-md-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegistrationComponent } from './registration-component/registration.component';\nimport { LoginComponent } from './login-component/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    RegistrationComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit\n{\n  constructor()\n  {\n    //initializing properties\n  }\n\n  ngOnInit(): void\n  {\n    //loading data from database\n  }\n}\n\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UsersService } from '../Services/users.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: 'login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit\r\n{\r\n  //declare properties\r\n  loginForm: FormGroup;\r\n  errorMsg: string = null;\r\n\r\n  constructor(private usersService: UsersService, private router: Router)\r\n  {\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl(null, \r\n        [ Validators.required, Validators.minLength(2) ]),\r\n      password: new FormControl(null, \r\n          [ Validators.required, Validators.minLength(6) ]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    //loading data from database\r\n  }\r\n\r\n  onLoginClick()\r\n  {\r\n    this.loginForm[\"submitted\"] = true;\r\n    if (this.loginForm.valid == true)\r\n    {\r\n      //send req\r\n      this.usersService\r\n      .getUsersByUserNameAndPassword\r\n      (this.loginForm.value.username, \r\n        this.loginForm.value.password)\r\n\r\n      .subscribe(\r\n\r\n        (response) => {\r\n\r\n          console.log(response);\r\n          if (response.length == 1)\r\n          {\r\n            this.usersService.isLoggedIn = true;\r\n            console.log(\"Login Success\");\r\n            this.router.navigate( [ \"/dashboard\" ] );\r\n          }\r\n\r\n          else\r\n          {\r\n            this.usersService.isLoggedIn = false;\r\n            console.log(\"Login Failed\");\r\n            this.errorMsg = \"Invalid username and password\";\r\n          }\r\n          \r\n        },\r\n\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n\r\n      );\r\n    }\r\n    else\r\n    {\r\n      console.log(\"Invalid\");\r\n    }\r\n  }\r\n}\r\n\r\n","<form [formGroup]=\"loginForm\" class=\"w-100\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-6 col-md-8 mx-auto\">\r\n\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4>Login</h4>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"username\" class=\"col-form-label col-md-3\">Username:</label>\r\n\r\n            <div class=\"col-md-9\">\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Username\" formControlName=\"username\"\r\n            [ngClass]=\"{ 'is-valid': \r\n              loginForm.get('username').valid &&\r\n              (loginForm.get('username').touched ||\r\n              loginForm['submitted']),\r\n        \r\n              'is-invalid':\r\n              loginForm.get('username').invalid &&\r\n              (loginForm.get('username').touched ||\r\n              loginForm['submitted'])\r\n            }\">\r\n        \r\n            <span class=\"text-danger\" *ngIf=\"\r\n              loginForm.get('username').invalid && \r\n              loginForm.get('username').errors.required &&\r\n              (loginForm.get('username').touched ||\r\n              loginForm['submitted'])\">\r\n              Username can't be blank.\r\n            </span>\r\n        \r\n            <span class=\"text-danger\" *ngIf=\"\r\n              loginForm.get('username').invalid && \r\n              loginForm.get('username').errors.minlength &&\r\n              (loginForm.get('username').touched ||\r\n              loginForm['submitted'])\">\r\n              Username should contain at least 2 characters.\r\n            </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"password\" class=\"col-form-label col-md-3\">Password:</label>\r\n            <div class=\"col-md-9\">\r\n              <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\r\n              [ngClass]=\"{ 'is-valid': \r\n                loginForm.get('password').valid &&\r\n                (loginForm.get('password').touched ||\r\n                loginForm['submitted']),\r\n\r\n                'is-invalid':\r\n                loginForm.get('password').invalid &&\r\n                (loginForm.get('password').touched ||\r\n                loginForm['submitted'])\r\n              }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"\r\n                loginForm.get('password').invalid && \r\n                loginForm.get('password').errors.required &&\r\n                (loginForm.get('password').touched ||\r\n                loginForm['submitted'])\">\r\n                Password can't be blank.\r\n              </span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"\r\n                loginForm.get('password').invalid && \r\n                loginForm.get('password').errors.minlength &&\r\n                (loginForm.get('password').touched ||\r\n                loginForm['submitted'])\">\r\n                Password should contain minimum 6 characters.\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"card-footer text-right\">\r\n          <span class=\"text-danger\">{{errorMsg}}</span>\r\n          <button (click)=\"onLoginClick()\" class=\"btn btn-success\">Login</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n  \r\n  \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit\r\n{\r\n  constructor()\r\n  {\r\n    //initializing properties\r\n  }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    //loading data from database\r\n  }\r\n}\r\n\r\n","<p>registration works!</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}